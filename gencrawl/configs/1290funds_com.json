{
    "website": "http://www.1290funds.com/",
    "domain": "financial",
    "crawl_method": "SCRAPY_GET",
    "allowed_domains": [
        "1290funds.com"
    ],
    "parsing_type": "xpath",
    "country": "US",
    "language": "ENGLISH",
    "detail": {
        "spider": "financial_detail_field_mapping",
        "crawl_method": "SELENIUM",
        "wait_time": 3,
        "custom_settings": {
            "HTTPCACHE_ENABLED": false
        },
        "parsing_type": "xpath",
        "start_urls": [
            "http://www.1290funds.com/1290-diversified-bond-fund",
            "http://www.1290funds.com/1290-high-yield-bond-fund",
            "http://www.1290funds.com/1290-retirement-funds",
            "http://www.1290funds.com/1290-smartbeta-equity-fund",
            "http://www.1290funds.com/1290-doubleline-dynamic-allocation-fund",
            "http://www.1290funds.com/1290-multi-alternative-strategies-fund",
            "http://www.1290funds.com/1290-gamco-small-mid-cap-value-fund"
        ],
        "ext_codes": {
            "instrument_name": {
                "paths": [
                    "//div[@class = 'heading-wrapper']/h1/text()"
                ],
                "return_type": "str",
                "selector": "root"
            },
            "temp_class_blocks": {
                "paths": [
                    "//td[contains(text(),'Ticker')]/following-sibling::td"
                ],
                "child_return_strategy": "multiple_items",
                "return_type": "selector",
                "selector": "root"
            },
            "nasdaq_ticker": {
                "paths": [
                    "./text()"
                ],
                "return_type": "str",
                "selector": "temp_class_blocks"
            },
            "cusip": {
                "paths": [
                    "//td[contains(text(),'CUSIP')]/following-sibling::td/text()"
                ],
                "return_type": "list-map",
                "selector": "root"
            },
            "share_class": {
                "paths": [
                    "//div[@id='fundDetailesWrapper']/table/tbody/tr[1]/th/text()"
                ],
                "return_type": "list-map",
                "selector": "root"
            },
            "isin": {
                "paths": [
                    "//td[contains(text(),'ISIN')]/following-sibling::td/text()"
                ],
                "return_type": "list-map",
                "selector": "root"
            },
            "portfolio_management_style": {
                "paths": [
                    "//div[@class = 'heading-wrapper']/h2/text()"
                ],
                "return_type": "str",
                "selector": "root"
            },
            "total_expense_gross": {
                "paths": [
                    "//th[contains(text(),'Gross expense ratio')]/ancestor::table/tbody/tr/td[2]/text()"
                ],
                "return_type": "str",
                "selector": "root"
            },
            "total_expense_net": {
                "paths": [
                    "//th[contains(text(),'Net expense ratio')]/ancestor::table/tbody/tr/td[3]/text()"
                ],
                "return_type": "str",
                "selector": "root"
            },
            "share_inception_date": {
                "paths": [
                    "//p[@class='disclosure'][4]/text()"
                ],
                "return_type": "str",
                "selector": "root"
            },
            "investment_objective": {
                "paths": [
                    "//h4[contains(text(),'Fund objective')]/following-sibling::p[1]/text()"
                ],
                "return_type": "str",
                "selector": "root"
            },
            "minimum_initial_investment": {
                "paths": [
                    "//td[contains(text(),'Investment minimum')]/following-sibling::td/text()"
                ],
                "cleanup_functions": [
                    "[o.strip() for o in obj['minimum_initial_investment'] if o.strip()]",
                    "[o.split(' ')[0] if '$' in o else o for o in obj['minimum_initial_investment']]"
                ],
                "return_type": "list-map",
                "selector": "root"
            },
            "temp_fund_managers": {
                "paths": [
                    "//h3[contains(text(),'Portfolio manager')]/parent::div/div/div/pmname"
                ],
                "child_return_strategy": "multiple_objects",
                "return_type": "selector",
                "selector": "root"
            },
            "fund_manager": {
                "paths": [
                    "./text()"
                ],
                "return_type": "str",
                "selector": "temp_fund_managers"
            }
        }
    }
}