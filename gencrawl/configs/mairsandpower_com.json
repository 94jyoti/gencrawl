{
    "website": "https://www.mairsandpower.com/",
    "domain": "financial",
    "crawl_method": "SCRAPY_GET",
    "allowed_domains": [
        "mairsandpower.com"
    ],
    "parsing_type": "xpath",
    "country": "US",
    "language": "ENGLISH",
    "detail": {
        "spider": "financial_detail",
        "crawl_method": "SCRAPY_GET",
        "parsing_type": "xpath",
        "start_urls": [
            "https://www.mairsandpower.com/funds/growth-fund",
            "https://www.mairsandpower.com/funds/balanced-fund",
            "https://www.mairsandpower.com/funds/small-cap-fund"
        ],
        "ext_codes": {
            "instrument_name": {
                "paths": [
                    "//div/h3[contains(text(),'Mairs')]/text()"
                ],
                "return_type": "join",
                "selector": "root"
            },
            "nasdaq_ticker": {
                "paths": [
                    "//td[contains(text(),'Ticker')]/following-sibling::td/text()"
                ],
                "return_type": "str",
                "selector": "root"
            },
            "asset_class": {
                "paths": [
                    "//td[contains(text(),'Style')]/following-sibling::td/text()"
                ],
                "return_type": "str",
                "selector": "root"
            },
            "portfolio_assets": {
                "paths": [
                    "//td[contains(text(),'Total  Net')]/following-sibling::td/text()"
                ],
                "return_type": "str",
                "selector": "root"
            },
            "portfolio_assets_date": {
                "paths": [
                    "//td[contains(text(),'Ticker')]/parent::tr/preceding-sibling::tr/td/text()"
                ],
                "cleanup_functions": [
                    "obj['portfolio_assets_date'].split('of')[-1]"
                ],
                "return_type": "str",
                "selector": "root"
            },
            "total_expense_gross": {
                "paths": [
                    "//td[contains(text(),'Expense')]/following-sibling::td/text()"
                ],
                "return_type": "str",
                "selector": "root"
            },
            "share_inception_date": {
                "paths": [
                    "//td[contains(text(),'Inception')]/following-sibling::td/text()"
                ],
                "return_type": "str",
                "selector": "root"
            },
            "investment_objective": {
                "paths": [
                    "//h2[contains(text(),'OBJECTIVE')]/ancestor::div[6]/following-sibling::div[3]//h3/text()"
                ],
                "return_type": "str",
                "selector": "root"
            },
            "investment_strategy": {
                "paths": [
                    "//h2[contains(text(),'OBJECTIVE')]/ancestor::div[6]/following-sibling::div[4]//ul/li/text()"
                ],
                "return_type": "join",
                "selector": "root"
            },
            "duration": {
                "paths": [
                    "//td[contains(text(), 'Effective') and contains(., 'Duration')]/following-sibling::td/text()"
                ],
                "return_type": "str",
                "selector": "root"
            },
            "duration_as_of_date": {
                "paths": [
                    "//td[contains(text(),'Ticker')]/parent::tr/preceding-sibling::tr/td/text()"
                ],
                "cleanup_functions": [
                    "obj['duration_as_of_date'].split('of')[-1]"
                ],
                "return_type": "str",
                "selector": "root"
            },
            "minimum_initial_investment": {
                "paths": [
                    "//td[contains(text(),'Initial') and not(contains(text(),'IRA'))]/following-sibling::td/text()"
                ],
                "return_type": "str",
                "selector": "root"
            },
            "minimum_additional_investment": {
                "paths": [
                    "//td[contains(text(),'Subsequent')]/following-sibling::td/text()"
                ],
                "return_type": "str",
                "selector": "root"
            },
            "turnover_rate": {
                "paths": [
                    "//td[contains(text(),'Annualized')]/following-sibling::td/text()"
                ],
                "return_type": "str",
                "selector": "root"
            },
            "turnover_rate_date": {
                "paths": [
                    "//td[contains(text(),'Ticker')]/parent::tr/preceding-sibling::tr/td/text()"
                ],
                "cleanup_functions": [
                    "obj['turnover_rate_date'].split('of')[-1]"
                ],
                "return_type": "str",
                "selector": "root"
            },
            "distribution_frequency": {
                "paths": [
                    "//td[contains(text(),'Income') and not(contains(text(),'Fixed'))]/following-sibling::td/text()"
                ],
                "return_type": "str",
                "selector": "root"
            },
            "sec_yield_30_day": {
                "paths": [
                    "//td[contains(text(),'30-Day')]/following-sibling::td/text()"
                ],
                "return_type": "str",
                "selector": "root"
            },
            "sec_yield_date_30_day": {
                "paths": [
                    "//td[contains(text(),'Ticker')]/parent::tr/preceding-sibling::tr/td/text()"
                ],
                "cleanup_functions": [
                    "obj['sec_yield_date_30_day'].split('of ')[-1]"
                ],
                "return_type": "str",
                "selector": "root"
            },
            "benchmarks": {
                "paths": [
                    "//td[contains(text(),'Index')]/text()[contains(.,'Index')]"
                ],
                "cleanup_functions": [
                    "list(set(obj['benchmarks']))"
                ],
                "return_type": "list",
                "selector": "root"
            },
            "temp_fund_managers": {
                "paths": [
                    "//p[contains(text(),'CFA') and not(contains(text(),'trademark'))]"
                ],
                "child_return_strategy": "multiple_objects",
                "return_type": "selector",
                "selector": "root"
            },
            "fund_manager": {
                "paths": [
                    "./text()"
                ],
                "return_type": "str",
                "selector": "temp_fund_managers"
            }
        }
    }
}