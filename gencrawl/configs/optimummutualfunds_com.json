{
    "website": "https://www.optimummutualfunds.com/",
    "domain": "financial",
    "crawl_method": "SCRAPY_GET",
    "allowed_domains": [
        "optimummutualfunds.com"
    ],
    "parsing_type": "xpath",
    "country": "US",
    "language": "ENGLISH",
    "detail": {
        "spider": "financial_detail",
        "crawl_method": "SELENIUM",
        "parsing_type": "xpath",
        "start_urls": [
            "https://www.optimummutualfunds.com/products/optimum-fixed-income-fund",
            "https://www.optimummutualfunds.com/products/optimum-international-fund",
            "https://www.optimummutualfunds.com/products/optimum-large-cap-growth-fund",
            "https://www.optimummutualfunds.com/products/optimum-large-cap-value-fund",
            "https://www.optimummutualfunds.com/products/optimum-small-mid-cap-growth-fund",
            "https://www.optimummutualfunds.com/products/optimum-small-mid-cap-value-fund"
        ],
        "ext_codes": {
            "instrument_name": {
                "paths": [
                    "//h1/text()"
                ],
                "return_type": "str",
                "selector": "root"
            },
            "nasdaq_ticker": {
                "paths": [
                    "//td[contains(text(),'NASDAQ')]/following-sibling::td/text()"
                ],
                "return_type": "str",
                "selector": "root"
            },
            "cusip": {
                "paths": [
                    "//td[contains(text(),'CUSIP')]/following-sibling::td/text()"
                ],
                "return_type": "str",
                "selector": "root"
            },
            "share_class": {
                "paths": [
                    "//h1/following-sibling::div/select/option[@selected]/text()"
                ],
                "cleanup_functions": [
                    "obj['share_class'].split('(')[0] "
                ],
                "return_type": "str",
                "selector": "root"
            },
            "portfolio_consultant": {
                "paths": [
                    "//h2[contains(text(),'Sub-advisor')]/following-sibling::h3[1]/text()"
                ],
                "return_type": "str",
                "selector": "root"
            },
            "portfolio_assets": {
                "paths": [
                    "//h3[contains(text(),'Total net assets')]/following-sibling::p/strong/text()"
                ],
                "return_type": "str",
                "selector": "root"
            },
            "portfolio_assets_date": {
                "paths": [
                    "//h3[contains(text(),'Total net assets')]/small/text()"
                ],
                "cleanup_functions": [
                    "obj['portfolio_assets_date'].split('as of')[-1] ",
                    "obj['portfolio_assets_date'].replace(')', '')"
                ],
                "return_type": "str",
                "selector": "root"
            },
            "annual_fund_operating_expenses_after_fee_waiver": {
                "paths": [
                    "//td[@id='totalAnnualExpensesAfterWaivers']/following-sibling::td/text()"
                ],
                "return_type": "str",
                "selector": "root"
            },
            "fees_total_12b_1": {
                "paths": [
                    "//td[@id='distributionServiceFees']/following-sibling::td/text()"
                ],
                "return_type": "str",
                "selector": "root"
            },
            "other_expenses": {
                "paths": [
                    "//td[@id='otherExpenses']/following-sibling::td/text()"
                ],
                "return_type": "str",
                "selector": "root"
            },
            "management_fee": {
                "paths": [
                    "//td[@id='managementFees']/following-sibling::td/text()"
                ],
                "return_type": "str",
                "selector": "root"
            },
            "contingent_deferred_sales_charge": {
                "paths": [
                    "//td[@id='maxContingentDeferredSalesCharge']/following-sibling::td/text()"
                ],
                "return_type": "str",
                "selector": "root"
            },
            "expense_waivers": {
                "paths": [
                    "//td[@id='feeWaiversExpenseReimbursements']/following-sibling::td/text()"
                ],
                "return_type": "str",
                "selector": "root"
            },
            "maximum_sales_charge_full_load": {
                "paths": [
                    "//td[@id='maxSalesCharge']/following-sibling::td/text()"
                ],
                "return_type": "str",
                "selector": "root"
            },
            "total_expense_gross": {
                "paths": [
                    "//p[@id='indexPerformance']/following-sibling::table[1]/tbody/tr[1]/td[2]/text()"
                ],
                "return_type": "str",
                "selector": "root"
            },
            "total_expense_net": {
                "paths": [
                    "//p[@id='indexPerformance']/following-sibling::table[1]/tbody/tr[2]/td[2]/text()"
                ],
                "return_type": "str",
                "selector": "root"
            },
            "share_inception_date": {
                "paths": [
                    "//td[contains(text(),'Inception date')]/following-sibling::td/text()"
                ],
                "return_type": "str",
                "selector": "root"
            },
            "minimum_initial_investment": {
                "paths": [
                    "//td[contains(text(),'Initial investment')]/following-sibling::td/text()"
                ],
                "return_type": "str",
                "selector": "root"
            },
            "minimum_additional_investment": {
                "paths": [
                    "//td[contains(text(),'Subsequent investments')]/following-sibling::td/text()"
                ],
                "return_type": "str",
                "selector": "root"
            },
            "distribution_frequency": {
                "paths": [
                    "//td[contains(text(),'Capital gains')]/following-sibling::td/text()"
                ],
                "return_type": "str",
                "selector": "root"
            },
            "dividend_frequency": {
                "paths": [
                    "//td[contains(text(),'Dividends ')]/following-sibling::td/text()"
                ],
                "return_type": "str",
                "selector": "root"
            },
            "sec_yield_30_day": {
                "paths": [
                    "//td[contains(text(),'SEC 30-day yield with waiver ')]/following-sibling::td/text()"
                ],
                "return_type": "str",
                "selector": "root"
            },
            "sec_yield_date_30_day": {
                "paths": [
                    "//th[contains(text(),'Performance characteristics')]/text()"
                ],
                "cleanup_functions": [
                    "obj['sec_yield_date_30_day'].split('as of')[-1] "
                ],
                "return_type": "str",
                "selector": "root"
            },
            "sec_yield_without_waivers_30_day": {
                "paths": [
                    "//td[contains(text(),'SEC 30-day yield without waiver')]/following-sibling::td/text()"
                ],
                "return_type": "str",
                "selector": "root"
            },
            "sec_yield_without_waivers_date_30_day": {
                "paths": [
                    "//th[contains(text(),'Performance characteristics')]/text()"
                ],
                "cleanup_functions": [
                    "obj['sec_yield_without_waivers_date_30_day'].split('as of')[-1] "
                ],
                "return_type": "str",
                "selector": "root"
            },
            "benchmarks": {
                "paths": [
                    "(//h3[@id='benchmarkPeerGroupHeader']/following-sibling::p/strong)[1]/text()"
                ],
                "return_type": "join",
                "selector": "root"
            }
        },
        "pagination": {
            "pagination": {
                "paths": [
                    "//h1/following-sibling::div/select/option[(not(@selected))]/@value"
                ],
                "cleanup_functions": [
                    "[(obj['fund_url'].split('#')[0] + '?FundClass=' + p + '#tab_tab1')  for p in obj['pagination']]"
                ],
                "return_type": "list",
                "selector": "root"
            }
        }
    }
}